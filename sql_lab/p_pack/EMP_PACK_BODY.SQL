CREATE OR REPLACE PACKAGE EMPLOYEE_20_PACK
AS
FUNCTION EMP_HIRE(EMP_I EMPLOYEE_20.EMP_ID%TYPE,
                EMP_NAME EMPLOYEE_20.EMP_NAME%TYPE,
                JOB EMPLOYEE_20.JOB%TYPE,
                SALARY EMPLOYEE_20.SALARY%TYPE,
                MANAGERID EMPLOYEE_20.MANAGERID%TYPE,
                DEPT_NO EMPLOYEE_20.DEPT_NO%TYPE)
                RETURN EMPLOYEE_20.EMP_ID%TYPE;
FUNCTION EMP_INC(EMP_I EMPLOYEE_20.EMP_ID%TYPE,
                PERC NUMBER DEFAULT 5)
                RETURN EMPLOYEE_20.SALARY%TYPE;
PROCEDURE EMP_FIRE(EMP_I EMPLOYEE_20.EMP_ID%TYPE);
PROCEDURE EMP_UPDATE(EMP_I EMPLOYEE_20.EMP_ID%TYPE,
                EMP_NAME EMPLOYEE_20.EMP_NAME%TYPE,
                JOB EMPLOYEE_20.JOB%TYPE,
                SALARY EMPLOYEE_20.SALARY%TYPE,
                MANAGERID EMPLOYEE_20.MANAGERID%TYPE,
                DEPT_NO EMPLOYEE_20.DEPT_NO%TYPE);
FUNCTION EMP_SEARCH(EMP_ID EMPLOYEE_20.EMP_ID%TYPE) RETURN EMPLOYEE_20%ROWTYPE;
PROCEDURE EMP_DISPLAY;
END EMPLOYEE_20_PACK;
/

CREATE OR REPLACE PACKAGE BODY EMPLOYEE_20_PACK
AS
FUNCTION EMP_HIRE(EMP_I EMPLOYEE_20.EMP_ID%TYPE,
                EMP_NAME EMPLOYEE_20.EMP_NAME%TYPE,
                JOB EMPLOYEE_20.JOB%TYPE,
                SALARY EMPLOYEE_20.SALARY%TYPE,
                MANAGERID EMPLOYEE_20.MANAGERID%TYPE,
                DEPT_NO EMPLOYEE_20.DEPT_NO%TYPE)
                RETURN EMPLOYEE_20.EMP_ID%TYPE
    AS
    BEGIN
    INSERT INTO EMPLOYEE_20 VALUES (EMP_I,EMP_NAME,JOB,SALARY,MANAGERID,DEPT_NO);
    DBMS_OUTPUT.PUT_LINE('EMPLOYEE CREATED');
    RETURN EMP_I;
    END EMP_HIRE;


FUNCTION EMP_INC(EMP_I EMPLOYEE_20.EMP_ID%TYPE,
                PERC NUMBER DEFAULT 5)
                RETURN EMPLOYEE_20.SALARY%TYPE
    AS 
    TEMP_SAL EMPLOYEE_20.SALARY%TYPE;
    BEGIN
    SELECT EMPLOYEE_20.SALARY INTO TEMP_SAL FROM EMPLOYEE_20 WHERE EMPLOYEE_20.EMP_ID = EMP_I;
    TEMP_SAL := TEMP_SAL+(TEMP_SAL * PERC/100);
    UPDATE EMPLOYEE_20 SET SALARY = TEMP_SAL WHERE EMPLOYEE_20.EMP_ID = EMP_I;
    DBMS_OUTPUT.PUT_LINE('SALARY INCREMENTED');
    RETURN TEMP_SAL;
    EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('EMPLOYEE NOT FOUND');
    END EMP_INC;


PROCEDURE EMP_FIRE(EMP_I EMPLOYEE_20.EMP_ID%TYPE)
    AS
    CANNOT_FIRE_OWNER EXCEPTION;
    BEGIN
    IF EMP_I = 'E029' THEN RAISE CANNOT_FIRE_OWNER;
    END IF;
    DELETE FROM EMPLOYEE_20 WHERE EMPLOYEE_20.EMP_ID = EMP_I;
    EXCEPTION
    WHEN CANNOT_FIRE_OWNER THEN
        DBMS_OUTPUT.PUT_LINE('CANNOT FIRE OWNER');
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('EMPLOYEE NOT FOUND');
    END EMP_FIRE;

PROCEDURE EMP_UPDATE(EMP_I EMPLOYEE_20.EMP_ID%TYPE,
                EMP_NAME EMPLOYEE_20.EMP_NAME%TYPE,
                JOB EMPLOYEE_20.JOB%TYPE,
                SALARY EMPLOYEE_20.SALARY%TYPE,
                MANAGERID EMPLOYEE_20.MANAGERID%TYPE,
                DEPT_NO EMPLOYEE_20.DEPT_NO%TYPE)
    AS
    BEGIN 
    UPDATE EMPLOYEE_20 SET EMPLOYEE_20.EMP_NAME = EMP_NAME,EMPLOYEE_20.EMP_NAME = EMP_NAME,EMPLOYEE_20.JOB = JOB,EMPLOYEE_20.SALARY = SALARY,EMPLOYEE_20.MANAGERID = MANAGERID,EMPLOYEE_20.DEPT_NO = DEPT_NO WHERE EMPLOYEE_20.EMP_ID = EMP_I;
    EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('EMPLOYEE NOT FOUND');
    END EMP_UPDATE;

FUNCTION EMP_SEARCH(EMP_ID EMPLOYEE_20.EMP_ID%TYPE) RETURN EMPLOYEE_20%ROWTYPE
    AS
    RES EMPLOYEE_20%ROWTYPE;
    CURSOR CUR IS SELECT * FROM EMPLOYEE_20 WHERE EMPLOYEE_20.EMP_ID = EMP_ID;
    BEGIN
    OPEN CUR;
    FETCH CUR INTO RES;
    CLOSE CUR;
    RETURN RES;
    EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('EMPLOYEE NOT FOUND');
        RETURN NULL;
    END EMP_SEARCH;

PROCEDURE EMP_DISPLAY AS
    CURSOR CUR IS SELECT * FROM EMPLOYEE_20;
    RES CUR%ROWTYPE;
    BEGIN
    OPEN CUR;
    LOOP
    FETCH CUR INTO RES;
    EXIT WHEN CUR%NOTFOUND;
    DBMS_OUTPUT.PUT_LINE(RES.EMP_ID||' '||RES.EMP_NAME||' '||RES.JOB||' '||RES.SALARY||' '||RES.MANAGERID||' '||RES.DEPT_NO);
    END LOOP;
    END EMP_DISPLAY;

END EMPLOYEE_20_PACK;
